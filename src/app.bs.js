// Generated by BUCKLESCRIPT VERSION 3.1.4, PLEASE EDIT WITH CARE
'use strict';

var Block = require("bs-platform/lib/js/block.js");
var Curry = require("bs-platform/lib/js/curry.js");
var React = require("react");
var Printf = require("bs-platform/lib/js/printf.js");
var Belt_Array = require("bs-platform/lib/js/belt_Array.js");
var ReasonReact = require("reason-react/src/ReasonReact.js");
var Maps$MyProjectName = require("./external/maps.bs.js");
var Fetcher$MyProjectName = require("./Fetcher.bs.js");

var component = ReasonReact.statelessComponent("App-MyProjectName");

var config = {
  scale: 200,
  rotation: /* array */[
    -10,
    0,
    0
  ]
};

function didMount() {
  return Fetcher$MyProjectName.fetchGet("https://immense-river-25513.herokuapp.com/locations", (function (dataArr) {
                console.log(dataArr);
                return /* () */0;
              }));
}

function make() {
  return /* record */[
          /* debugName */component[/* debugName */0],
          /* reactClassInternal */component[/* reactClassInternal */1],
          /* handedOffState */component[/* handedOffState */2],
          /* willReceiveProps */component[/* willReceiveProps */3],
          /* didMount */didMount,
          /* didUpdate */component[/* didUpdate */5],
          /* willUnmount */component[/* willUnmount */6],
          /* willUpdate */component[/* willUpdate */7],
          /* shouldUpdate */component[/* shouldUpdate */8],
          /* render */(function () {
              return React.createElement("div", undefined, ReasonReact.element(/* None */0, /* None */0, Maps$MyProjectName.ComposableMap[/* make */0]("FooBar", config, /* array */[ReasonReact.element(/* None */0, /* None */0, Maps$MyProjectName.ZoomableGroup[/* make */0](/* array */[ReasonReact.element(/* None */0, /* None */0, Maps$MyProjectName.Geographies[/* make */0]("../world-50m.json", (function (geographies, projection) {
                                                        return Belt_Array.mapWithIndex(geographies, (function (i, geography) {
                                                                      return ReasonReact.element(/* Some */[Curry._1(Printf.sprintf(/* Format */[
                                                                                            /* Int */Block.__(4, [
                                                                                                /* Int_d */0,
                                                                                                /* No_padding */0,
                                                                                                /* No_precision */0,
                                                                                                /* End_of_format */0
                                                                                              ]),
                                                                                            "%d"
                                                                                          ]), i)], /* None */0, Maps$MyProjectName.Geography[/* make */0](geography, projection, /* array */[]));
                                                                    }));
                                                      })))]))])));
            }),
          /* initialState */component[/* initialState */10],
          /* retainedProps */component[/* retainedProps */11],
          /* reducer */component[/* reducer */12],
          /* subscriptions */component[/* subscriptions */13],
          /* jsElementWrapped */component[/* jsElementWrapped */14]
        ];
}

exports.component = component;
exports.config = config;
exports.didMount = didMount;
exports.make = make;
/* component Not a pure module */
